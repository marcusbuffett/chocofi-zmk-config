/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0

&lt {
    quick-tap-ms = <200>;
};

/ {
    chosen {
        zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        aacute: aacute {
            compatible = "zmk,behavior-macro";
            label = "AACUTE";
            #binding-cells = <0>;
            bindings = <&none &kp A>;
        };

        eacute: eacute {
            compatible = "zmk,behavior-macro";
            label = "EACUTE";
            #binding-cells = <0>;
            bindings = <&none &kp E>;
        };

        iacute: iacute {
            compatible = "zmk,behavior-macro";
            label = "IACUTE";
            #binding-cells = <0>;
            bindings = <&none &kp I>;
        };

        oacute: oacute {
            compatible = "zmk,behavior-macro";
            label = "OACUTE";
            #binding-cells = <0>;
            bindings = <&none &kp O>;
        };

        uacute: uacute {
            compatible = "zmk,behavior-macro";
            label = "UACUTE";
            #binding-cells = <0>;
            bindings = <&none &kp U>;
        };

        acirc: acirc {
            compatible = "zmk,behavior-macro";
            label = "ACIRC";
            #binding-cells = <0>;
            bindings = <&none &kp A>;
        };

        ecirc: ecirc {
            compatible = "zmk,behavior-macro";
            label = "ECIRC";
            #binding-cells = <0>;
            bindings = <&none &kp E>;
        };

        icirc: icirc {
            compatible = "zmk,behavior-macro";
            label = "ICIRC";
            #binding-cells = <0>;
            bindings = <&none &kp I>;
        };

        ocirc: ocirc {
            compatible = "zmk,behavior-macro";
            label = "OCIRC";
            #binding-cells = <0>;
            bindings = <&none &kp O>;
        };

        ucirc: ucirc {
            compatible = "zmk,behavior-macro";
            label = "UCIRC";
            #binding-cells = <0>;
            bindings = <&none &kp U>;
        };

        atilde: atilde {
            compatible = "zmk,behavior-macro";
            label = "ATILDE";
            #binding-cells = <0>;
            bindings = <&none &kp A>;
        };

        otilde: otilde {
            compatible = "zmk,behavior-macro";
            label = "OTILDE";
            #binding-cells = <0>;
            bindings = <&none &kp O>;
        };

        ao: ao {
            compatible = "zmk,behavior-macro";
            label = "AO";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp O>;
        };

        oes: oes {
            compatible = "zmk,behavior-macro";
            label = "OES";
            #binding-cells = <0>;
            bindings = <&none &kp O &kp E &kp S>;
        };

        vim_word: vim_word {
            compatible = "zmk,behavior-macro";
            label = "VIM_WORD";
            #binding-cells = <0>;
            bindings = <&kp LA(RIGHT) &kp LA(RIGHT) &kp LA(LEFT)>;
        };

        previous_line_enter: previous_line_enter {
            compatible = "zmk,behavior-macro";
            label = "PREVIOUS_LINE_ENTER";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT) &kp LS(ENTER) &kp LEFT>;
        };

        vim_I: vim_I {
            compatible = "zmk,behavior-macro";
            label = "VIM_I";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT_ARROW) &to 0>;
        };

        aes: aes {
            compatible = "zmk,behavior-macro";
            label = "AES";
            #binding-cells = <0>;
            bindings = <&none &kp A &kp E &kp S>;
        };

        esc_0: esc_0 {
            compatible = "zmk,behavior-macro";
            label = "ESC_0";
            #binding-cells = <0>;
            bindings = <&to 0 &kp ESCAPE>;
        };

        next_line_enter: next_line_enter {
            compatible = "zmk,behavior-macro";
            label = "NEXT_LINE_ENTER";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT) &kp ENTER>;
        };

        thic_arrow: thic_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "THIC_ARROW";
        };

        thin_arrow: thin_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "THIN_ARROW";
        };

        agrave: agrave {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp A>;
            label = "AGRAVE";
        };
    };

    combos {
        compatible = "zmk,combos";

        RESET {
            bindings = <&esc_0>;
            key-positions = <12 17>;
        };

        toggle_shift {
            bindings = <&caps_word>;
            key-positions = <16 13>;
        };

        RESET_w {
            bindings = <&esc_0>;
            key-positions = <14 15>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
  &trans  &kp G  &kp P   &kp M      &trans    &trans  &kp B  &kp U           &kp LA(BSPC)  &kp BSPC
  &kp D   &kp S  &kp T   &kp R      &kp L     &kp H   &kp N  &kp E           &kp A         &kp I
  &kp C   &kp V  &kp K   &kp W      &trans    &trans  &kp F  &kp J           &kp X         &kp Y
                 &trans  &kp SPACE  &trans    &trans  &kp O  &sk LEFT_SHIFT
            >;
        };

        Symbols {
            bindings = <
  &trans             &kp AT_SIGN  &kp MINUS             &kp LBKT               &trans           &kp TILDE  &kp LESS_THAN  &kp GREATER_THAN  &kp FSLH  &kp ASTERISK
  &kp DOUBLE_QUOTES  &kp SQT      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &kp GRAVE  &kp DOT        &kp COLON         &kp SEMI  &trans
  &kp PERCENT        &kp EQUAL    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE         &kp PLUS   &kp QUESTION   &kp EXCLAMATION   &kp BSLH  &kp CARET
                                  &kp UNDERSCORE        &kp SPACE              &trans           &trans     &trans         &trans
            >;
        };

        sticky_mods {
            bindings = <
  &trans  &trans     &trans        &trans        &trans    &trans  &trans        &trans        &trans     &trans
  &trans  &sk LCTRL  &sk LEFT_ALT  &sk LEFT_GUI  &trans    &trans  &sk LEFT_GUI  &sk LEFT_ALT  &sk LCTRL  &trans
  &trans  &trans     &trans        &trans        &trans    &trans  &trans        &trans        &trans     &trans
                     &trans        &trans        &trans    &trans  &trans        &trans
            >;
        };
    };
};
